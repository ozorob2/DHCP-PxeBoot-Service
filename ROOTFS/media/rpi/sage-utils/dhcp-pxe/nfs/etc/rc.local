#!/bin/bash -e

#initializes sd card on rpi

SDDIR="/dev/mmcblk0"
SDPARTDIR="/dev/mmcblk0p3"

echo "Waggle customizations - start" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` > /etc/rc.local.logs

# disable rsyslog since we have journald
echo "Disable ryslog logging" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
systemctl stop syslog.socket
systemctl stop rsyslog.service
systemctl stop logrotate.timer
systemctl stop logrotate.service

# disable unnecessary timers
echo "Disable unnecessary timers" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
systemctl stop fwupd-refresh.timer
systemctl stop apt-daily.timer
systemctl stop apt-daily-upgrade.timer
systemctl stop motd-news.timer
systemctl stop man-db.timer

echo "Disable snapd" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
systemctl mask snapd.service
systemctl stop snapd.service

if [ -b "$SDDIR" ]; then
  echo "SD Card found continuing..." | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
  mkdir -p /media/plugin-data/ | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
  if [ ! -b "$SDPARTDIR" ]; then
    echo "Initializing Partition Table on SD Card" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
    sectors=$(sudo fdisk -l | grep ^/dev/mmcblk0 |  awk -F" "  '{ print $3 }')
    end_sector=$(echo $sectors | cut -d' ' -f2)
    start_sector=$(expr $end_sector + 1)

    # create partition 3 (starting end of partition 2, consuming rest of disk)
    (echo "n";
     echo "p";
     echo "3";
     echo "${start_sector}";
     echo "";
     sleep 5s;
     echo "w"
    ) | fdisk --wipe always --wipe-partitions always /dev/mmcblk0

    mkfs -t ext4 /dev/mmcblk0p3 >> /etc/rc.local.logs
  fi

  echo "Preforming check on 3rd partition on SD" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
  fsck -a /dev/mmcblk0p3 | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs

  echo "Mounting SD CARD Scratch Space" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
  mount /dev/mmcblk0p3 /media/plugin-data | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
  cat /etc/rc.local.logs >> /media/plugin-data/sdmount.log

else
  echo "Error: SD CARD not found will continue without SD Scratch Space" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
fi

#Installing all packages from /isodebs/
dpkg -i /isodebs/*
echo "Packages In /isodebs/ Installed" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs

#Enable custom services
echo "Enable custom services" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
systemctl enable waggle-k3s-shutdown

MACLower=$(sed s/://g /sys/class/net/eth0/address)
MAC=${MACLower^^}
MACFULL=$(printf "0000%5s\n" "$MAC")
hostname=$(cat /etc/hostname)

echo "Configure local Docker registery access" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
mkdir -p /etc/docker/certs.d/10.31.81.1\:5000/
cp /etc/waggle/docker/certs/domain.crt /etc/docker/certs.d/10.31.81.1\:5000/
mkdir -p /usr/local/share/ca-certificates
cp /etc/waggle/docker/certs/domain.crt /usr/local/share/ca-certificates/docker.crt
update-ca-certificates

echo "Prepare k3s environment" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
mkdir -p /media/plugin-data/k3s/etc/rancher/
mkdir -p /media/plugin-data/k3s/kubelet
mkdir -p /media/plugin-data/k3s/rancher
ln -s /media/plugin-data/k3s/etc/rancher/ /etc/rancher
ln -s /media/plugin-data/k3s/kubelet/ /var/lib/kubelet
ln -s /media/plugin-data/k3s/rancher/ /var/lib/rancher
# copy over the custom k3s registry config
mkdir -p /etc/rancher/k3s/
cp /etc/waggle/k3s/registries.yaml /etc/rancher/k3s/

# download and start k3s
K3S_URL=https://10.31.81.1:6443 K3S_TOKEN=4tX0DUZ0uQknRtVUAKjt K3S_NODE_NAME=$MACFULL.$hostname INSTALL_K3S_SKIP_DOWNLOAD=true /etc/installK3S.sh | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs

echo "Waggle customizations - done" | xargs -L 1 echo `date +'[%Y-%m-%d %H:%M:%S]'` >> /etc/rc.local.logs
